#!/usr/bin/env python

import requests
import json
from argparse import ArgumentParser
from rich.console import Console
from rich.table import Table
from rich import print

console = Console()
base_url = "https://graphql.anilist.co"


def get_userid(username: str):
    query = """
    query ($name: String) {
      User (name: $name) {
        id
      }
    }
    """
    # Ge user id
    variables = {"name": username}
    r = requests.post(base_url, json={"query": query, "variables": variables})
    res = r.json()
    print(res)
    return res["data"]["User"]["id"]


def get_data(user_id: int, save: bool = False):
    query = """
    query ($userId: Int) {
      MediaListCollection (userId: $userId, type: ANIME, status: COMPLETED, sort: SCORE_DESC) {
        lists {
            entries{
                media {
                    title {
                        english
                        romaji
                    }
                    averageScore
                    meanScore
                    format
                }
            }
        }
      }
    }
    """
    # Ge user id
    variables = {"userId": user_id}
    r = requests.post(base_url, json={"query": query, "variables": variables})
    print(r.status_code)
    res = r.json()["data"]["MediaListCollection"]["lists"][0]["entries"]
    res.sort(key=lambda e: e["media"]["averageScore"], reverse=True)
    table = Table(header_style="bold green")
    table.add_column("Title")
    table.add_column("Average Score", justify="right")
    table.add_column("Mean Score", justify="right")
    table.add_column("Format", justify="right")
    table.row_styles = ["blue", "red"]

    s = 0
    s1 = 0
    for item in res:
        name = (
            item["media"]["title"]["romaji"]
            if item["media"]["title"]["english"] is None
            else item["media"]["title"]["english"]
        )
        # print(f"{name} - {item['media']['averageScore']}")
        table.add_row(
            name,
            f"{item['media']['averageScore']}",
            f"{item['media']['meanScore']}",
            item["media"]["format"],
        )
        s += item["media"]["averageScore"]
        s1 += item["media"]["meanScore"]

    table.add_row("", "", "", "", end_section=True)
    table.add_row("Avg", f"{s/len(res):.5f}", f"{s1/len(res):.5f}", f"{len(res)}")
    console.print(table)
    # print(f"\nAvg: {s/len(res)}")
    if save:
        with open(f"list_{user_id}.json", "w") as f:
            json.dump(res, f)


def main():
    parser = ArgumentParser()
    group = parser.add_mutually_exclusive_group(required=True)
    group.add_argument("-u", "--username")
    group.add_argument("-i", "--id")
    parser.add_argument("-s", "--save", action="store_true")

    args = parser.parse_args()

    if args.id:
        id = args.id
    else:
        id = get_userid(args.username)
    get_data(id, args.save)


if __name__ == "__main__":
    main()
